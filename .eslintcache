[{"/home/moto4321/React/shop/src/index.js":"1","/home/moto4321/React/shop/src/App.js":"2","/home/moto4321/React/shop/src/reportWebVitals.js":"3","/home/moto4321/React/shop/src/data.js":"4","/home/moto4321/React/shop/src/Detail.js":"5","/home/moto4321/React/shop/src/Loading.js":"6","/home/moto4321/React/shop/src/Cart.js":"7"},{"size":1572,"mtime":1608807835300,"results":"8","hashOfConfig":"9"},{"size":4507,"mtime":1616301279930,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1608181198770,"results":"11","hashOfConfig":"9"},{"size":471,"mtime":1608191882020,"results":"12","hashOfConfig":"9"},{"size":4840,"mtime":1616311112430,"results":"13","hashOfConfig":"9"},{"size":125,"mtime":1608273410500,"results":"14","hashOfConfig":"9"},{"size":1564,"mtime":1610179825910,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"zrwy1w",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/home/moto4321/React/shop/src/index.js",[],["34","35"],"/home/moto4321/React/shop/src/App.js",[],"/home/moto4321/React/shop/src/reportWebVitals.js",[],"/home/moto4321/React/shop/src/data.js",["36"],"export default [\n  {\n    id : 0,\n    title : \"White and Black\",\n    content : \"Born in France\",\n    price : 120000\n  },\n\n  {\n    id : 1,\n    title : \"Red Knit\",\n    content : \"Born in Seoul\",\n    price : 110000\n  },\n\n  {\n    id : 2,\n    title : \"Grey Yordan\",\n    content : \"Born in the States\",\n    price : 130000\n  }\n] \n\n\n// var name = 'Kim';\n\n// export default name;\n// export { name, name2 }; // 이렇게 여러개를 export 가능 \n\n// name을 퉷 뱉고있는 것.",["37","38"],"/home/moto4321/React/shop/src/Detail.js",["39","40","41","42","43","44","45","46"],"import React, { useContext, useEffect, useState } from 'react';\nimport {NavBar, Nav, NavItem} from 'react-bootstrap';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { CSSTransition } from \"react-transition-group\";\n// import Data from './data.js';\nimport styled from 'styled-components';\nimport './Detail.scss';\nimport { 재고context } from './App.js';\nimport { connect } from 'react-redux';\n\nlet 박스 = styled.div`\n  padding : 20px;\n`;  // CSS를 미리 입혀놓은 컴포넌트, '박스'가 컴포넌트다.\nlet 제목 = styled.h4`\n  font-size : 25px;\n  color : ${ props => props.색상 };\n`;\n\nfunction Detail(props) { \n\n  let [alert, alert변경] = useState(true);\n  let [inputData, inputData변경] = useState('');\n\n  let [누른탭, 누른탭변경] = useState(0);\n  let [스위치, 스위치변경] = useState(false);\n\n  let 재고 = useContext(재고context);\n\n  useEffect(()=>{\n    let 타이머 = setTimeout(() => {\n      alert변경(false);\n    console.log('안녕');\n    return ()=>{ clearTimeout(타이머) };  // return function 어쩌구(){ 실행할 코드~~~~ } Detail 컴포넌트가 사라질 때 실행할 코드.\n    }, 2000)\n  }, [alert, inputData]); // useEffect훅4 대괄호 안에 실행조건을 넣을 수 있음.\n  // 대괄호를 비워두면 업데이트 되지 않음!\n  // useEffect는 여기에 여러번 쓸 수 있음(위부터 순서대로 실행)\n  // 이 경우 타이머를 제거해줘야함\n\n  let { id } = useParams(); // { id,id2,id3 } 이렇게 입력가능\n  let history = useHistory(); //옛날 코드에는 사용하지 않았던 것.\n  // Data.id = id;\n\n  let selectedProduct = props.shoes.filter((product)=>{\n    return product.id == id;\n  });\n\n  let 찾은상품 = props.shoes.find((상품)=> {\n    return 상품.id == id;\n  })\n\n  console.log(selectedProduct);\n  console.log(찾은상품);\n\n  return(\n    <div className=\"container\">\n      <박스>\n        <제목 className=\"red\">상세페이지</제목>\n      </박스> {/* padding이 20px인 div */}\n\n      <input onChange={ (e)=>{ inputData변경(e.target.value) } } />\n\n      { \n      alert === true\n      ? (<div className=\"my-alert\">\n          <p>재고가 얼마 남지 않았습니다.</p>\n        </div>)\n      : null\n      }\n\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <img src={`https://codingapple1.github.io/shop/shoes1.jpg`} width=\"100%\" />\n        </div>\n        <div className=\"col-md-6 mt-4\">\n          <h4 className=\"pt-5\">{ 찾은상품.title }</h4>\n          <p>{ 찾은상품.content }</p>\n          <p>{ 찾은상품.price }원</p>\n\n          <Info 재고={props.재고} />\n\n          {/* <button className=\"btn btn-danger\" onClick={ ()=> { \n            props.재고변경([9,11,12]);\n            props.dispatch({ type : '항목추가', payload : {id:2, name:'새로운상품', quan:1} });\n            history.push('/cart');\n          }}>주문하기</button>  */}\n\n          <button className=\"btn btn-danger\" onClick={ ()=> { \n            props.재고변경([9,11,12]);\n            props.dispatch({ type : '항목추가', payload : {id:2, name:'새로운상품', quan:1} });\n            history.push('/cart');\n          }}>주문하기</button>\n\n\n\n          <button className=\"btn btn-primary\" onClick={ ()=> {\n            history.goBack();   // 이런건 구글링해서 찾아야 함.\n            // history.push('/') '/' 라는 경로로 이동해 주세요 라는 뜻\n          }}>Back</button> \n        </div>\n      </div>\n\n      <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\n        <Nav.Item>\n          <Nav.Link eventKey=\"link-0\" onClick={()=>{ 스위치변경(false); 누른탭변경(0) }}>상품설명</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link eventKey=\"link-1\" onClick={()=>{ 스위치변경(false); 누른탭변경(1) }}>배송정보</Nav.Link>\n        </Nav.Item>\n      </Nav>\n      \n      <CSSTransition in={스위치} classNames=\"wow\" timeout={500}> \n        {/* in이 true일 때만 에니메이션이 동작 */}\n        <TabContent 누른탭={누른탭} 스위치변경={스위치변경}/>\n      </CSSTransition>\n      \n      \n    </div>\n  )\n}\n\nfunction TabContent(props){\n\n  useEffect(()=>{\n    props.스위치변경(true); \n  })\n\n  if(props.누른탭 === 0){\n    return <div>0번째 내용입니다.</div>\n  } else if(props.누른탭 === 1){\n    return <div>1번째 내용입니다.</div>\n  } else {\n    return <div>2번째 내용입니다.</div>\n  }\n  \n  \n  \n\n}\n\n\nfunction Info(props){\n  return(\n    <p>재고 : { props.재고[0] }</p>\n  )\n}\n\nfunction state를props화(state){ //redux store 데이터 가져와서 props로 변환해주는 함수.\n  console.log(state);\n  return {\n    state : state.reducer,\n    alert열렸니 : state.reducer2\n  }\n}\n\nexport default connect(state를props화)(Detail)\n","/home/moto4321/React/shop/src/Loading.js",[],"/home/moto4321/React/shop/src/Cart.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":1,"nodeType":"53","endLine":22,"endColumn":2},{"ruleId":"47","replacedBy":"54"},{"ruleId":"49","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":2,"column":9,"nodeType":"58","messageId":"59","endLine":2,"endColumn":15},{"ruleId":"56","severity":1,"message":"60","line":2,"column":22,"nodeType":"58","messageId":"59","endLine":2,"endColumn":29},{"ruleId":"56","severity":1,"message":"61","line":27,"column":7,"nodeType":"58","messageId":"59","endLine":27,"endColumn":9},{"ruleId":"62","severity":1,"message":"63","line":45,"column":23,"nodeType":"64","messageId":"65","endLine":45,"endColumn":25},{"ruleId":"62","severity":1,"message":"63","line":49,"column":18,"nodeType":"64","messageId":"65","endLine":49,"endColumn":20},{"ruleId":"66","severity":1,"message":"67","line":57,"column":7,"nodeType":"68","endLine":57,"endColumn":11},{"ruleId":"66","severity":1,"message":"69","line":58,"column":9,"nodeType":"68","endLine":58,"endColumn":29},{"ruleId":"70","severity":1,"message":"71","line":73,"column":11,"nodeType":"68","endLine":73,"endColumn":86},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration",["72"],["73"],"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","'NavItem' is defined but never used.","'재고' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-pascal-case","Imported JSX component 박스 must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component 제목 must be in PascalCase or SCREAMING_SNAKE_CASE","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]